on: 
  push:
      branches:
          - main

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    env:
      matlib: 1.1.0
      testlib: 1.1.0
      matlibrepo: /rindow/rindow-matlib
      mathmatrix: 2.1.0
      mathmatrixrepo: /rindow/rindow-math-matrix

    strategy:
      fail-fast: true
      matrix:
        include:
          - name: PHP8.1
            os: ubuntu-latest
            php: '8.1'
            phpunit: '10.5'
#          - name: PHP8.3
#            os: ubuntu-latest
#            php: '8.3'
#            phpunit: '11.5'
          - name: PHP8.4
            os: ubuntu-latest
            php: '8.4'
            phpunit: '11.5'
        ffi: ['','ffi']
  
    steps:
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # PHP Extras
          coverage: none
          tools: composer, phpunit:${{ matrix.phpunit }}, phpstan
          #ini-values: "memory_limit=512M"
          extensions: ${{ matrix.ffi }}

      - name: Install Libs (Linux)
        if: ${{ startsWith(matrix.os, 'ubuntu-')  && matrix.ffi == 'ffi' }}
        run: |
            sudo apt install -y libopenblas0 liblapacke
            wget https://github.com/${matlibrepo}/releases/download/${testlib}/rindow-matlib_${matlib}-`lsb_release -sr`_amd64.deb
            sudo apt install -y ./rindow-matlib_${matlib}-`lsb_release -sr`_amd64.deb

      - name: Checkout codes
        uses: "actions/checkout@v4"

      - name: Checkout math-matrix tests
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        run: |
          ( cd .. && git clone https://github.com/${mathmatrixrepo} )
          ( cd ../rindow-math-matrix && git checkout ${mathmatrix} )

      #- name: Composer
      #  uses: php-actions/composer@v6
      #  with:
      #    php_version: ${{ matrix.php }}
      #    php_extensions: ffi
      
      - name: Run Composer Update
        run: composer update

      #- name: PHP Static Analysys
      #  uses: php-actions/phpstan@v3
      #  with:
      #    php_version: ${{ matrix.php }}
      #    path: src/

      - name: PHP Static Analysys
        run: phpstan

      #- name: PHPUnit Tests
      #  uses: php-actions/phpunit@v3
      #  with:
      #    configuration: tests/phpunit.xml
      #    version: 10.5
      #    php_version: ${{ matrix.php }}
      #    php_extensions: ffi
      #    filter: ReleaseTest

      - name: PHPUnit Tests with ${{ matrix.ffi }}.
        run: phpunit -c tests
